name: Build Wheels

on:
  workflow_dispatch:  # Allow manual triggering

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build wheel setuptools cython numpy scipy

      # Linux builds using cibuildwheel
      - name: Build Linux wheels
        if: runner.os == 'Linux'
        uses: pypa/cibuildwheel@v3.2.0
        env:
          CIBW_ARCHS: "x86_64"  # Only build 64-bit wheels
          CIBW_BUILD: "cp310-* cp311-* cp312-* cp313-*"  # Build for Python 3.0-3.13
          CIBW_SKIP: "*-musllinux_* *-manylinux_i686"  # Skip musl and 32-bit builds

      # Windows builds
      - name: Build Windows wheels
        if: runner.os == 'Windows'
        run: |
          python -m pip install cibuildwheel
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS: "AMD64"  # Only build 64-bit wheels
          CIBW_BUILD: "cp310-win* cp311-win* cp312-win* cp313-win*"  # Build for Python 3.10-3.13
          
      # macOS builds
      - name: Build macOS wheels
        if: runner.os == 'macOS'
        uses: pypa/cibuildwheel@v3.2.0
        env:
          CIBW_ARCHS: "x86_64 arm64"
          CIBW_BUILD: "cp310-* cp311-* cp312-* cp313-*"
          
      # Upload artifacts
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl
