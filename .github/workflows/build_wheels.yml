name: Build Wheels

on:
  push:
    tags:
      - 'v*'  # Run when a tag starting with 'v' is pushed
  workflow_dispatch:  # Allow manual triggering

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]  # Focus on Linux for Colab and Windows for local use

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build wheel setuptools cython numpy scipy

      # For manylinux wheels
      - name: Build manylinux wheels
        if: runner.os == 'Linux'
        uses: pypa/cibuildwheel@v2.16.2
        env:
          CIBW_BUILD: "cp38-manylinux* cp39-manylinux* cp310-manylinux* cp311-manylinux*"
          CIBW_SKIP: "*-musllinux*"
          CIBW_BEFORE_BUILD: "pip install cython numpy scipy"
          
      # For Windows wheels
      - name: Build wheels (Windows)
        if: runner.os == 'Windows'
        run: |
          pip wheel . -w ./dist --no-deps

      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: wheels-${{ matrix.os }}
          path: ./dist/*.whl

  # Optional: Upload to PyPI
  # upload_pypi:
  #   name: Upload to PyPI
  #   needs: [build_wheels]
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
  #   steps:
  #     - uses: actions/download-artifact@v2
  #       with:
  #         path: ./dist
  #     - name: Prepare distribution
  #       run: |
  #         find ./dist -name "*.whl" -exec mv {} ./dist/ \;
  #     - name: Upload to PyPI
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         password: ${{ secrets.PYPI_API_TOKEN }} 